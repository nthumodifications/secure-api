datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid())
  userid    String     @unique
  name      String
  nameEn    String     @map("name_en")
  email     String
  inschool  Boolean
  cid       String?
  lmsid     String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  authCodes AuthCode[]
  tokens    Token[]
}

model AuthCode {
  id          String   @id @default(uuid())
  code        String   @unique
  userId      String
  clientId    String
  redirectUri String
  scopes      String[]
  expiresAt   DateTime
  user        User     @relation(fields: [userId], references: [id])
}

model AuthRequest {
  id          String   @id @default(uuid())
  clientId    String 
  redirectUri String
  scopes      String[]
  state       String? @unique
  clientState String?
  nonce       String?
  codeChallenge String?
  codeChallengeMethod String?
  responseMode String?
  responseType String[]
}

model Client {
  id           String   @id @default(uuid())
  clientId     String   @unique
  redirectUris String[]
  clientSecret String? // Optional, for confidential clients
  scopes       String[]
}

enum TokenType {
  ACCESS
  REFRESH
}

model Token {
  id        String    @id @default(uuid())
  token     String    @unique
  type      TokenType
  userId    String
  clientId  String
  scopes    String[]
  expiresAt DateTime
  createdAt DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id])
}
